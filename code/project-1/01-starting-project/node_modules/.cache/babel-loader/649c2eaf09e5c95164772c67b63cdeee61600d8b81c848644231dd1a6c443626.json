{"ast":null,"code":"var _jsxFileName = \"/Users/dingjiahua/year3/react-complete-guide-code/code/project-1/01-starting-project/src/App.js\";\nimport Form from './components/Form/Form';\nimport Header from './components/Header/Header';\nimport Result from './components/Result/Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const calculateHandler = userInput => {\n    userInput.defaultPrevented();\n\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      calculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Form","Header","Result","jsxDEV","_jsxDEV","App","calculateHandler","userInput","defaultPrevented","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","calculate","_c","$RefreshReg$"],"sources":["/Users/dingjiahua/year3/react-complete-guide-code/code/project-1/01-starting-project/src/App.js"],"sourcesContent":["\nimport Form from './components/Form/Form';\nimport Header from './components/Header/Header';\nimport Result from './components/Result/Result';\n\nfunction App() {\n  const calculateHandler = (userInput) => {\n    userInput.defaultPrevented();\n    \n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <Header></Header>\n      <Form\n       calculate= {calculateHandler}\n      ></Form>\n      <Result></Result>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AACA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtCA,SAAS,CAACC,gBAAgB,CAAC,CAAC;;IAE5B;IACA;;IAEA,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAIC,cAAc,GAAG,CAACH,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACpD,MAAMI,kBAAkB,GAAG,CAACJ,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC9D,MAAMK,cAAc,GAAG,CAACL,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMM,QAAQ,GAAG,CAACN,SAAS,CAAC,UAAU,CAAC;;IAEvC;IACA,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;;IAEA;EACF,CAAC;;EAED,oBACEP,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACH,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACjBnB,OAAA,CAACJ,IAAI;MACJwB,SAAS,EAAGlB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACRnB,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACE,EAAA,GAvCQpB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}