{"ast":null,"code":"var _jsxFileName = \"/Users/dingjiahua/year3/react-complete-guide-code/code/project-1/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Form from './components/Form/Form';\nimport Header from './components/Header/Header';\nimport Result from './components/Result/Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dataOfYears, setDataOfYears] = useState([]);\n  console.log(dataOfYears);\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    // const yearlyData = []; // per-year results\n    const yearlyData = dataOfYears; // []\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    setDataOfYears(yearlyData);\n    console.log(!dataOfYears.length === 0, yearlyData);\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      OnCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), dataOfYears.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No investment calculated yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), !dataOfYears.length === 0 ? /*#__PURE__*/_jsxDEV(Result, {\n      data: dataOfYears,\n      initialInvest: 100000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rz8CxEDnblM2uX/iU64zA4Ql8+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Form","Header","Result","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dataOfYears","setDataOfYears","console","log","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","length","children","fileName","_jsxFileName","lineNumber","columnNumber","OnCalculate","data","initialInvest","_c","$RefreshReg$"],"sources":["/Users/dingjiahua/year3/react-complete-guide-code/code/project-1/01-starting-project/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport Form from './components/Form/Form';\nimport Header from './components/Header/Header';\nimport Result from './components/Result/Result';\n\nfunction App() {\n  const [dataOfYears, setDataOfYears] = useState([]);\n\n\n  console.log(dataOfYears);\n  const calculateHandler = (userInput) => {\n    \n    \n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    // const yearlyData = []; // per-year results\n    const yearlyData = dataOfYears; // []\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n    setDataOfYears(yearlyData);\n    console.log((!dataOfYears.length === 0),yearlyData)\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <Header></Header>\n      <Form\n       OnCalculate = {calculateHandler}\n      ></Form>\n      {dataOfYears.length === 0?<p>No investment calculated yet</p>:<></>}\n      {!dataOfYears.length === 0?<Result\n      data = {dataOfYears}\n      initialInvest = {100000}\n      ></Result>:<p></p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGlDY,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EACxB,MAAMI,gBAAgB,GAAIC,SAAS,IAAK;IAGtC;IACA;;IAEA;IACA,MAAMC,UAAU,GAAGN,WAAW,CAAC,CAAC;;IAEhC,IAAIO,cAAc,GAAG,CAACF,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACpD,MAAMG,kBAAkB,GAAG,CAACH,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC9D,MAAMI,cAAc,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMK,QAAQ,GAAG,CAACL,SAAS,CAAC,UAAU,CAAC;;IAEvC;IACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;IACAP,cAAc,CAACK,UAAU,CAAC;IAC1BJ,OAAO,CAACC,GAAG,CAAE,CAACH,WAAW,CAACgB,MAAM,KAAK,CAAC,EAAEV,UAAU,CAAC;IACnD;EACF,CAAC;;EAED,oBACEX,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACH,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACjB1B,OAAA,CAACJ,IAAI;MACJ+B,WAAW,EAAIlB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACPrB,WAAW,CAACgB,MAAM,KAAK,CAAC,gBAACrB,OAAA;MAAAsB,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAC1B,OAAA,CAAAE,SAAA,mBAAI,CAAC,EAClE,CAACG,WAAW,CAACgB,MAAM,KAAK,CAAC,gBAACrB,OAAA,CAACF,MAAM;MAClC8B,IAAI,EAAIvB,WAAY;MACpBwB,aAAa,EAAI;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,gBAAC1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACtB,EAAA,CAjDQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}